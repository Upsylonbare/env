#!/bin/sh

# Colored manpages
export LESS_TERMCAP_mb=$'\e[1;32m'
export LESS_TERMCAP_md=$'\e[1;32m'
export LESS_TERMCAP_me=$'\e[0m'
export LESS_TERMCAP_se=$'\e[0m'
export LESS_TERMCAP_so=$'\e[01;33m'
export LESS_TERMCAP_ue=$'\e[0m'
export LESS_TERMCAP_us=$'\e[1;4;31m'

export EDITOR=vim
export FZF_DEFAULT_OPTS

# set PATH so it includes user's private bin if it exists
if [ -d "$HOME/bin" ] ; then
    PATH="$HOME/bin:$PATH"
fi

# set PATH so it includes user's private bin if it exists
if [ -d "$HOME/.local/bin" ] ; then
    PATH="$HOME/.local/bin:$PATH"
fi

# set PATH for cargo if it exists
if [ -d "$HOME/.carbo/bin" ] ; then
    PATH="$HOME/.cargo/bin:$PATH"
fi

# set PATH for texlive if it exists
if [ -d "/usr/local/texlive/2023/bin/x86_64-linux" ] ; then
    PATH="/usr/local/texlive/2023/bin/x86_64-linux:$PATH"
fi

# set PATH for texlive man if it exists
if [ -d "/usr/local/texlive/2023/texmf-dist/doc/man" ] ; then
    MANPATH="/usr/local/texlive/2023/texmf-dist/doc/man:$MANPATH"
fi

# set PATH for texlive info if it exists
if [ -d "/usr/local/texlive/2023/texmf-dist/doc/info" ] ; then
    INFOPATH="/usr/local/texlive/2023/texmf-dist/doc/info:$INFOPATH"
fi

# Test if current environnement is wsl2
if grep -qEi "(Microsoft|WSL)" /proc/version &> /dev/null ; then
    export DISPLAY=:0
    alias i3='sudo mount --bind /mnt/c/Users/clego/OneDrive\ -\ ESEO/Cours/I3 ~/I3/'
    alias i2='sudo mount --bind /mnt/c/Users/clego/OneDrive\ -\ ESEO/Cours/I2 ~/I2/'
    alias i='i2 && i3'
fi

#My aliases
alias ll='exa -laF --group-directories-first --header --long'
alias la='exa -a --group-directories-first'
alias l='exa -lF --group-directories-first --header --long'

alias up='sudo apt-get update -y && sudo apt-get upgrade -y'
alias reload='echo "Sourcing environnement"; source ~/.zshrc'
alias cat='batcat -p'

alias k="ps -ef | fzf --reverse | awk '{print $2}' | xargs kill -9"

alias findall="find * | \
                fzf --prompt 'All> ' \
                    --header 'CTRL-D: Directories / CTRL-F: Files' \
                    --bind 'ctrl-d:change-prompt(Directories>)+reload(find * -type d)' \
                    --bind 'ctrl-f:change-prompt(Files>)+reload(find * -type f)' |
                    xargs realpath | xclip -r -selection clipboard"

alias path="echo \$PATH | tr ':' '\n'"


_gitLogLineToHash="echo {} | grep -o '[a-f0-9]\{7\}' | head -1"

_view_commit="echo {} | $_gitLogLineToHash | xargs -I % sh -c 'git show --color=always % | diff-so-fancy' | less -R"
_copy_commit_hash="$_gitLogLineToHash | xclip -r -selection clipboard"
_git_checkout="$_gitLogLineToHash | xargs -I % sh -c 'git checkout %'"

gdiff() {
    local path_to_repo=$(git rev-parse --show-toplevel)
    git diff \
        $@ \
        --name-only | sed "s,^,$path_to_repo/," |
            fzf -m \
                --reverse \
                --tiebreak=index \
                --no-multi \
                --ansi \
                --preview="git diff {} | diff-so-fancy"
}

fz() {
    file=$(fzf --preview 'batcat --style=numbers --color=always {}')
    if [ -n "$file" ]; then
        editor "$file"
    fi
}

lg(){
    git log \
        $@ \
        --graph \
        --all \
        --oneline \
        --color=always \
        --format="%C(cyan)%hv %C(blue)%ar %C(auto)%d %C(yellow)%s%+b %C(black)%ae" "$@" |
        fzf -i -e +s \
            --reverse \
            --tiebreak=index \
            --no-multi \
            --ansi \
            --preview="$_view_commit" \
            --header "enter: view, CTRL+c: copy commit hash, CTRL+x: checkout" \
            --bind "enter:execute:$_view_commit" \
            --bind "ctrl-c:execute:$_copy_commit_hash" \
            --bind "ctrl-x:execute:$_git_checkout"
}

# Function to speed up git log command (write commit graph in .git/objects/info/commit-graph)
speed_lg()
{
    git config --global core.commitGraph true
    git config --global gc.writeCommitGraph true
    git commit-graph write
}

